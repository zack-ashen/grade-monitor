[{"/Volumes/Jack/Projects/grade-teller/src/index.js":"1","/Volumes/Jack/Projects/grade-teller/src/components/UserClasses.js":"2","/Volumes/Jack/Projects/grade-teller/src/components/App.js":"3","/Volumes/Jack/Projects/grade-teller/src/components/Nav.js":"4","/Volumes/Jack/Projects/grade-teller/src/components/Login.js":"5","/Volumes/Jack/Projects/grade-teller/src/utils/refreshToken.js":"6","/Volumes/Jack/Projects/grade-teller/src/components/Logout.js":"7","/Volumes/Jack/Projects/grade-teller/src/firebase.js":"8","/Volumes/Jack/Projects/grade-teller/src/components/Modal/Modal.js":"9","/Volumes/Jack/Projects/grade-teller/src/components/Modal/ModalContainer.js":"10","/Volumes/Jack/Projects/grade-teller/src/components/CourseNav.js":"11","/Volumes/Jack/Projects/grade-teller/src/components/GradeDisplay.js":"12","/Volumes/Jack/Projects/grade-teller/src/components/TableView.js":"13","/Volumes/Jack/Projects/grade-teller/src/components/AssignmentRow.js":"14","/Volumes/Jack/Projects/grade-teller/src/components/AddClassWeight.js":"15","/Volumes/Jack/Projects/grade-teller/src/components/CourseView.js":"16","/Volumes/Jack/Projects/grade-teller/src/utils/gradeColor.js":"17","/Volumes/Jack/Projects/grade-teller/src/components/EditClass.js":"18","/Volumes/Jack/Projects/grade-teller/src/components/Message.js":"19"},{"size":892,"mtime":1609035532090,"results":"20","hashOfConfig":"21"},{"size":8311,"mtime":1609810108780,"results":"22","hashOfConfig":"21"},{"size":590,"mtime":1609347524130,"results":"23","hashOfConfig":"21"},{"size":2929,"mtime":1609609283710,"results":"24","hashOfConfig":"21"},{"size":1373,"mtime":1609347356140,"results":"25","hashOfConfig":"21"},{"size":496,"mtime":1609013939480,"results":"26","hashOfConfig":"21"},{"size":529,"mtime":1609020140180,"results":"27","hashOfConfig":"21"},{"size":597,"mtime":1609347467070,"results":"28","hashOfConfig":"21"},{"size":673,"mtime":1609609219960,"results":"29","hashOfConfig":"21"},{"size":1270,"mtime":1609609255230,"results":"30","hashOfConfig":"21"},{"size":796,"mtime":1609641085480,"results":"31","hashOfConfig":"21"},{"size":350,"mtime":1609361863140,"results":"32","hashOfConfig":"21"},{"size":11492,"mtime":1609810812590,"results":"33","hashOfConfig":"21"},{"size":5036,"mtime":1609700227530,"results":"34","hashOfConfig":"21"},{"size":3134,"mtime":1609813517190,"results":"35","hashOfConfig":"21"},{"size":3942,"mtime":1609807549150,"results":"36","hashOfConfig":"21"},{"size":491,"mtime":1609525936740,"results":"37","hashOfConfig":"21"},{"size":2699,"mtime":1609723843960,"results":"38","hashOfConfig":"21"},{"size":155,"mtime":1609813585180,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ogh8ag",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Jack/Projects/grade-teller/src/index.js",[],["80","81"],"/Volumes/Jack/Projects/grade-teller/src/components/UserClasses.js",["82","83","84","85"],"/Volumes/Jack/Projects/grade-teller/src/components/App.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/Nav.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/Login.js",[],"/Volumes/Jack/Projects/grade-teller/src/utils/refreshToken.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/Logout.js",[],"/Volumes/Jack/Projects/grade-teller/src/firebase.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/Modal/Modal.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/Modal/ModalContainer.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/CourseNav.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/GradeDisplay.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/TableView.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/AssignmentRow.js",["86","87","88"],"import React from \"react\";\nimport \"./Button.css\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport \"./AssignmentRow.css\";\n\nexport default class AssignmentRow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: this.props.id,\n            assignment_name: this.props.assignment.name,\n            points_earned: this.props.assignment.points_earned,\n            points_possible: this.props.assignment.points_possible,\n            grade: (this.props.assignment.points_earned / this.props.assignment.points_possible) * 100\n        }\n\n        this.updateAssignmentName = this.updateAssignmentName.bind(this);\n        this.updatePointsEarned = this.updatePointsEarned.bind(this);\n        this.updatePointsPossible = this.updatePointsPossible.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        if (prevProps.assignment !== this.props.assignment) {\n            this.setState({id: this.props.id,\n                           assignment_name: this.props.assignment.name,\n                           points_earned: this.props.assignment.points_earned,\n                           points_possible: this.props.assignment.points_possible,\n                           grade: (this.props.assignment.points_earned / this.props.assignment.points_possible) * 100});\n        }\n    }\n\n    updateAssignmentName (event) {\n        const newAssignmentName = event.target.value;\n\n        this.setState({assignment_name: newAssignmentName});\n\n        const updatedAssignment = {\n            id: this.state.id,\n            name: newAssignmentName,\n            points_possible: this.state.points_possible,\n            points_earned: this.state.points_earned\n        };\n\n        this.props.updateWeightGrade(updatedAssignment);\n    }\n\n    updatePointsEarned (event) {\n        const updatedPointsEarned = parseInt(event.target.value) || 0;\n        const pointsPossible = parseInt(this.state.points_possible) || 0;\n        const updatedGrade = (updatedPointsEarned / pointsPossible) * 100;\n\n        this.setState({points_earned: event.target.value,\n                        grade: updatedGrade});\n        \n        const updatedAssignment = {\n            id: this.state.id,\n            name: this.state.assignment_name,\n            points_possible: this.state.points_possible,\n            points_earned: event.target.value\n        };\n\n        this.props.updateWeightGrade(updatedAssignment);\n    }\n\n    updatePointsPossible (event) {\n        const updatedPointsPossible = parseInt(event.target.value) || 0;\n        const pointsEarned = parseInt(this.state.pointsEarned) || 0;\n        const updatedGrade = (pointsEarned / updatedPointsPossible) * 100;\n\n        this.setState({points_possible: event.target.value,\n                        grade: updatedGrade});\n\n        const updatedAssignment = {\n            id: this.state.id,\n            name: this.state.assignment_name,\n            points_possible: event.target.value,\n            points_earned: this.state.points_earned\n        };\n        \n        this.props.updateWeightGrade(updatedAssignment);\n    }\n\n    onBlur(event, inputType) {\n        if (event.target.value === '') {\n            this.setState({[inputType]: 0})\n        }\n        this.props.saveData();\n    }\n\n    render () {\n        return (\n            <>\n            <tr>\n                <td className=\"data\" className=\"assignment-field\">\n                    <input \n                        type=\"text\" \n                        className=\"assignment-input\" \n                        value={this.state.assignment_name} \n                        onChange={this.updateAssignmentName} \n                        onBlur={this.props.saveData} />\n                </td>\n                <td className=\"data\" className=\"points-earned-field\">\n                    <input \n                        type=\"text\" \n                        className=\"points-earned-input\" \n                        value={this.state.points_earned} \n                        onChange={this.updatePointsEarned} \n                        onBlur={(e) => this.onBlur(e, 'points_earned')} />\n                </td>\n                <td className=\"data\" className=\"points-possible-field\">\n                    <input \n                        type=\"text\" \n                        className=\"points-possible-input\" \n                        value={this.state.points_possible} \n                        onChange={this.updatePointsPossible} \n                        onBlur={(e) => this.onBlur(e, 'points_possible')} />\n                </td>\n                <td className=\"data grade-field\">{Math.round(this.state.grade)}%</td>\n                <td className=\"data trashField deleteAssignmentField\"><button className=\"deleteAssignmentButton\" onClick={(e) => this.props.deleteAssignment(e, this.state.id)}><FontAwesomeIcon icon={faTrash} /></button></td>\n            </tr>\n            </>\n        )\n    }\n}","/Volumes/Jack/Projects/grade-teller/src/components/AddClassWeight.js",["89"],"/Volumes/Jack/Projects/grade-teller/src/components/CourseView.js",["90","91"],"/Volumes/Jack/Projects/grade-teller/src/utils/gradeColor.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/EditClass.js",[],"/Volumes/Jack/Projects/grade-teller/src/components/Message.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":58,"column":33,"nodeType":"98","messageId":"99","endLine":58,"endColumn":41},{"ruleId":"96","severity":1,"message":"100","line":179,"column":15,"nodeType":"98","messageId":"99","endLine":179,"endColumn":21},{"ruleId":"96","severity":1,"message":"101","line":180,"column":15,"nodeType":"98","messageId":"99","endLine":180,"endColumn":27},{"ruleId":"96","severity":1,"message":"102","line":186,"column":15,"nodeType":"98","messageId":"99","endLine":186,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":99,"column":38,"nodeType":"105","endLine":99,"endColumn":66},{"ruleId":"103","severity":1,"message":"104","line":107,"column":38,"nodeType":"105","endLine":107,"endColumn":69},{"ruleId":"103","severity":1,"message":"104","line":115,"column":38,"nodeType":"105","endLine":115,"endColumn":71},{"ruleId":"96","severity":1,"message":"106","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":20},{"ruleId":"96","severity":1,"message":"107","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"108","line":2,"column":27,"nodeType":"98","messageId":"99","endLine":2,"endColumn":40},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'curClass' is assigned a value but never used.","Identifier","unusedVar","'newDoc' is assigned a value but never used.","'deleteOldDoc' is assigned a value but never used.","'res' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Transition' is defined but never used.","'TransitionGroup' is defined but never used.","'CSSTransition' is defined but never used.","no-global-assign","no-unsafe-negation"]